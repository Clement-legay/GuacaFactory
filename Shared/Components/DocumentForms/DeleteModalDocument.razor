@using System.ComponentModel
@inject NavigationManager NavigationManager
@inject IEmployeeRequests EmployeeRequests

<div class="modal-backdrop fade show"></div>

<div class="modal fade show" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true" style="display: block">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Delete - @Employee.Firstname @Employee.Lastname</h5>
                <button type="button" @onclick="Close" style="border: none; background: none" data-dismiss="modal" aria-label="Close">
                    <i class="fa-solid fa-xmark"></i>
                </button>
            </div>
            <div class="modal-body">
                @if (ErrorMessage != null)
                                    {
                                    <div class="alert alert-danger" role="alert">
                                        @ErrorMessage
                                    </div>
                                }
                <p>Are you sure you want to delete @Employee.Firstname @Employee.Lastname ?</p>
            </div>
            <div class="modal-footer">
                <button type="button" @onclick="Close" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" disabled="@loading" @onclick="OnDeleteButtonClick" class="btn btn-danger">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <span class="sr-only">Loading...</span>
                    } else
                    {
                        <span>Delete</span>
                    }
                </button>
            </div>
        </div>
    </div>
</div>

@code
{
    private bool loading = false;
    private string? ErrorMessage { get; set; }
    
    [Parameter]
    public Employee? Employee { get; set; }

    [Parameter]
    public bool IsOpen { get; set; }
    
    private void Close()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
    
    private async Task OnDeleteButtonClick()
    {
        loading = true;
        
        var result = await EmployeeRequests.DeleteEmployeeAsync(Employee.Id);
        if (result is null)
        {
            ErrorMessage = "Something went wrong";
            loading = false;
            
            StateHasChanged();
            return;
        }
        
        NavigationManager.NavigateTo("/employees");
    }
}